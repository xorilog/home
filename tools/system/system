#! /usr/bin/env bash
set -o pipefail -o noclobber -o nounset

WORK_DIR=${WORK_DIR-}
if [[ -z "${WORK_DIR}" ]]; then
    WORK_DIR="$(mktemp --tmpdir -u nix-config-sync.XXXXXXXXXX)"
    # shellcheck disable=2064
    trap "rm -rf '$WORK_DIR'" EXIT
fi
function error() {
    local red
    local reset
    red="$(tput -Txterm setaf 1)"
    reset="$(tput -Txterm sgr0)"

    printf "%s%s%s\n" "$red" "$*" "$reset"
    exit 1
}

function dry-build() {
    [ "$#" -eq 0 ] || error "build"
    local machine
    machine="$(hostname)"
    unset NIX_PATH
    nix build systems.nix --show-trace --dry-run --out-link "$WORK_DIR" "$machine" ||
        error "Failed to build system"
}

function build() {
    [ "$#" -eq 0 ] || error "build"
    local machine
    machine="$(hostname)"
    unset NIX_PATH
    nix build -f systems.nix --show-trace --out-link "$WORK_DIR" "$machine" ||
        error "Failed to build system"
}

function switch() {
    [ "$#" -eq 0 ] || error "switch"
    build
    local switch_bin="$WORK_DIR/bin/switch-to-configuration"
    sudo nix-env --set \
        --profile "/nix/var/nix/profiles/system" \
        "$WORK_DIR" ||
        error "Failed to activate profile"
    sudo "$switch_bin" "switch" ||
        error "Failed to activate system"
}

function boot() {
    [ "$#" -eq 0 ] || error "switch"
    build
    local switch_bin="$WORK_DIR/bin/switch-to-configuration"
    sudo nix-env --set \
        --profile "/nix/var/nix/profiles/system" \
        "$WORK_DIR" ||
        error "Failed to activate profile"
    sudo "$switch_bin" "boot" ||
        error "Failed to activate system"
}

function main() {
    for target in $@; do
        $target
    done
    exit 0
}

main "$@"
